{"version":3,"sources":["logo.svg","trinity.png","shared/components/Card.js","pages/Home/HomePage.js","pages/Welcome/WelcomePage.js","Navigation/MainNavigator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","className","children","HomePage","src","link","map","card","key","href","target","rel","width","height","alt","style","backgroundColor","WelcomePage","history","useHistory","logo","trinity","onClick","push","MainNavigator","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,oOCY5BC,G,YARF,SAACC,GACZ,OAAO,yBAAKC,UAAU,QAAQD,EAAME,YCwGvBC,EAzGE,SAACH,GAgDhB,OACE,yBAAKC,UAAU,kBACb,wBAAIA,UAAU,SAAd,aACA,yBAAKA,UAAU,sBACb,6BACE,wBAAIA,UAAU,SAAd,YApDS,CACf,CACEG,IACE,8HACFC,KAAM,wDAER,CACED,IACE,+EACFC,KACE,wEAEJ,CACED,IACE,wFACFC,KAAM,kCAsCQC,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CAAMC,IAAKD,EAAKH,KACd,uBAAGK,KAAMF,EAAKF,KAAMK,OAAO,SAASC,IAAI,uBACtC,yBACEC,MAAM,QACNC,OAAO,QACPT,IAAKG,EAAKH,IACVU,IAAI,GACJC,MAAO,CAAEC,gBAAiB,iBAMpC,6BACE,wBAAIf,UAAU,SAAd,QAjDK,CACX,CACEG,IACE,uEACFC,KACE,wEAEJ,CACED,IACE,iFACFC,KACE,8UAuCQC,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,KACE,uBAAGE,KAAMF,EAAKF,KAAMK,OAAO,SAASC,IAAI,uBACtC,yBACEC,MAAM,QACNC,OAAO,QACPT,IAAKG,EAAKH,IACVU,IAAI,GACJC,MAAO,CAAEC,gBAAiB,iBAK7B,IACP,6BACE,wBAAIf,UAAU,SAAd,SAlDM,CACZ,CACEG,IACE,0FACFC,KAAM,0CAER,CACED,IACE,4EACFC,KAAM,4BA0CKC,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,KACE,uBAAGE,KAAMF,EAAKF,KAAMK,OAAO,SAASC,IAAI,uBACtC,yBACEC,MAAM,QACNC,OAAO,QACPT,IAAKG,EAAKH,IACVU,IAAI,GACJC,MAAO,CAAEC,gBAAiB,oB,kCC1E7BC,G,MAlBK,WAClB,IAAMC,EAAUC,cAEhB,OACE,yBAAKlB,UAAU,qBACb,6BACE,4BAAQA,UAAU,SAAlB,aAEF,yBAAKG,IAAKgB,IAAMnB,UAAU,WAAWa,IAAI,SACzC,yBAAKV,IAAKiB,IAASpB,UAAU,UAAUa,IAAI,YAC3C,yBAAKb,UAAU,WAAWqB,QAAS,kBAAMJ,EAAQK,KAAK,WACpD,0CACA,0BAAMtB,UAAU,kBAAhB,yBCEOuB,MAff,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,U,MCDKC,MARf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,QCKc0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1a624666.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/trinity.b5d28b7e.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nCard.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./HomePage.css\";\r\nimport Card from \"../../shared/components/Card\";\r\n\r\nconst HomePage = (props) => {\r\n  const learning = [\r\n    {\r\n      src:\r\n        \"https://www.utb.edu.co/newsletter/educacionadistancia/2014/boletin005/noti_apliaciones/004-codecademy/images/codecademy.png\",\r\n      link: \"https://www.codecademy.com/catalog/language/html-css\",\r\n    },\r\n    {\r\n      src:\r\n        \"https://i.pinimg.com/originals/fa/0c/ff/fa0cff4635ed328f76c3b0ddf9155259.png\",\r\n      link:\r\n        \"https://es.coursera.org/learn/html-css-javascript-for-web-developers\",\r\n    },\r\n    {\r\n      src:\r\n        \"https://cdn.freecodecamp.org/platform/universal/fcc-twitter-1120X600-social-green.png\",\r\n      link: \"https://www.freecodecamp.org/\",\r\n    },\r\n  ];\r\n\r\n  const docs = [\r\n    {\r\n      src:\r\n        \"https://www.logo.wine/a/logo/MDN_Web_Docs/MDN_Web_Docs-Logo.wine.svg\",\r\n      link:\r\n        \"https://es.coursera.org/learn/html-css-javascript-for-web-developers\",\r\n    },\r\n    {\r\n      src:\r\n        \"https://jessehouwing.net/content/images/size/w2000/2018/07/stackoverflow-1.png\",\r\n      link:\r\n        \"https://www.google.com/search?sxsrf=ALeKk01dImvEEeVGl6PzXTlc2jooDMQWXw%3A1594943766375&ei=FukQX7PKFonQsAXry76oDw&q=get+date+javascript+format+dd%2Fmm%2Fyyyy&oq=get+date+javascript&gs_lcp=CgZwc3ktYWIQARgAMgQIABBHMgQIABBHMgQIABBHMgQIABBHMgQIABBHMgQIABBHMgQIABBHMgQIABBHUABYAGCKUWgAcAF4AIABAIgBAJIBAJgBAKoBB2d3cy13aXo&sclient=psy-ab\",\r\n    },\r\n  ];\r\n\r\n  const tools = [\r\n    {\r\n      src:\r\n        \"https://sobrebits.com/wp-content/uploads/2018/10/Visual-Studio-Code-para-PowerShell.png\",\r\n      link: \"https://code.visualstudio.com/download\",\r\n    },\r\n    {\r\n      src:\r\n        \"https://codesandbox.io/static/banner-b3e4dc81348f7f65008a97a62f9125dd.png\",\r\n      link: \"https://codesandbox.io/\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <h1 className=\"title\">Resources</h1>\r\n      <div className=\"sections-container\">\r\n        <div>\r\n          <h1 className=\"title\">Learning</h1>\r\n          {learning.map((card) => (\r\n            <Card key={card.src}>\r\n              <a href={card.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img\r\n                  width=\"250px\"\r\n                  height=\"110px\"\r\n                  src={card.src}\r\n                  alt=\"\"\r\n                  style={{ backgroundColor: \"white\" }}\r\n                />\r\n              </a>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <h1 className=\"title\">Docs</h1>\r\n          {docs.map((card) => (\r\n            <Card>\r\n              <a href={card.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img\r\n                  width=\"250px\"\r\n                  height=\"110px\"\r\n                  src={card.src}\r\n                  alt=\"\"\r\n                  style={{ backgroundColor: \"white\" }}\r\n                />\r\n              </a>\r\n            </Card>\r\n          ))}\r\n        </div>{\" \"}\r\n        <div>\r\n          <h1 className=\"title\">Tools</h1>\r\n          {tools.map((card) => (\r\n            <Card>\r\n              <a href={card.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img\r\n                  width=\"250px\"\r\n                  height=\"110px\"\r\n                  src={card.src}\r\n                  alt=\"\"\r\n                  style={{ backgroundColor: \"white\" }}\r\n                />\r\n              </a>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport logo from \"../../logo.svg\";\r\nimport trinity from \"../../trinity.png\";\r\nimport \"./WelcomePage.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst WelcomePage = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"welcome-container\">\r\n      <div>\r\n        <strong className=\"title\">Welcome!</strong>\r\n      </div>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <img src={trinity} className=\"trinity\" alt=\"trinity\" />\r\n      <div className=\"continue\" onClick={() => history.push(\"/home\")}>\r\n        <span>Continue</span>\r\n        <span className=\"material-icons\">arrow_forward_ios</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"../pages/Home/HomePage\";\r\nimport WelcomePage from \"../pages/Welcome/WelcomePage\";\r\n\r\nfunction MainNavigator() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/home\">\r\n          <HomePage />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <WelcomePage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default MainNavigator;\r\n","import React from \"react\";\nimport MainNavigator from \"./Navigation/MainNavigator\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainNavigator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}